{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,UACjCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,sBAClCI,YAAaL,SAASC,cAAc,yBAGtC,SAASK,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAMPV,EAAKC,KAAKiB,iBAAiB,UAAU,SAAAC,GACnCA,EAAIC,iBAKJ,IAJA,IAAIC,EAAW,GACXC,EAAaC,OAAOvB,EAAKK,WAAWmB,OACpCC,EAAYF,OAAOvB,EAAKM,UAAUkB,OAClCE,EAAiBH,OAAOvB,EAAKO,YAAYiB,OACpCG,EAAI,EAAGA,EAAID,EAAgBC,IAClCN,EAASO,KACPpB,EAAcmB,EAAI,EAAGL,EAAaK,EAAIF,GACnCI,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,OACpEV,EAAGI,SAAS+B,UAAW,C,IAE1BC,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAjC,GAASkC,OAAOK,QAAQ,sBAAqCH,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,KAK5EC,QAAQ2B,IAAIjB,GACRkB,SAAQ,WACPvC,EAAKI,SAAS+B,UAAW,EACzBJ,EAAAjC,GAASkC,OAAOC,QAAQ,GAAkBC,OAAfR,EAAe,2BAC1C1B,EAAKC,KAAKuC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnCreat: document.querySelector('button'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]')\n}\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n    \n  });\n  \n}\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n  let promises = [];\n  let firstDelay = Number(refs.inputDelay.value);\n  let stepDelay = Number(refs.inputStep.value);\n  let amountPromises = Number(refs.inputAmount.value);\n  for (let i = 0; i < amountPromises; i ++) {\n    promises.push(\n      createPromise(i + 1, firstDelay + i * stepDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          refs.btnCreat.disabled = true;\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    );\n    \n  }\n Promise.all(promises)\n    .finally(() => {\n      refs.btnCreat.disabled = false; \n      Notiflix.Notify.success(`${amountPromises} promises were created`);\n      refs.form.reset();\n    });\n  \n  });\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btnCreat","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","promises","firstDelay","Number","value","stepDelay","amountPromises","i","push","then","param","$parcel$interopDefault","Notify","success","concat","disabled","catch","failure","all","finally","reset"],"version":3,"file":"03-promises.c8aa0f9f.js.map"}